#!/bin/sh

# TODO: support config locations:
# ./.piku-server
# ~/.piku-server
# git config --get remote.piku.url
# git config --get remote.paas.url

remote=`git config --get remote.piku.url`
server=${PIKU_SERVER:-`echo $remote | cut -f1 -d":" 2>/dev/null`}

out() { printf "%s\n" "$*" >&2; }

out "Piku remote operator."

if [ "$server" = "" ]
then
  out
  out "Error: no piku server configured."
  out "Use PIKU_SERVER=piku@MYSERVER.NET or configure a git remote called 'piku'."
  out
else
  app=${PIKU_APP:-`echo $remote | cut -f2 -d":" 2>/dev/null`}
  # gather SSH flags
  while [ "${1#\-}"x != "${1}x" ];
  do
    if expr "$1" : '-h\|--help' ;
    then
      cmd="help"
    else
      sshflags="${sshflags} ${1}"
    fi;
    shift
  done

  # check the Piku command to be run
  if [ "$#" -ge 1 ] ; then
    cmd=${cmd:-$1}
    shift 
  fi

  if [ "$cmd" = "help" ]; then
    app="" # help dont need app name
  fi

  # avoid duplicated param
  if [ ! -z "$app" ] && [ "$1" = "$app" ]; then
    shift
  fi

  out "Server: $server"
  out "App: $app"
  out
  case "$cmd" in
    "")
      ssh ${sshflags} "$server" "$@" | grep -v "INTERNAL"
      ;;
    apps|setup|setup:ssh)
      ssh ${sshflags} "$server" "$cmd"
      ;;
    *)
      ssh ${sshflags} "$server" "$cmd" "$app" "$@"
      ;;
  esac
fi
